using {{ rootNamespace }}.Api.Models;
using MediatR;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

namespace {{ namespace }}
{
    public class {{ namePascalCase }}
    {
        public class Request : IRequest<Response> { }

        public class Response
        {
            public List<{{ entityNamePascalCase }}Dto> {{ entityNamePascalCasePlural }} { get; set; }
        }

        public class Handler : IRequestHandler<Request, Response>
        {
            private readonly I{{ rootNamespace }}DbContext _context;

            public Handler(I{{ rootNamespace }}DbContext context){
                _context = context;
            }

            public async Task<Response> Handle(Request request, CancellationToken cancellationToken) {
			    return new Response() { 
                    {{ entityNamePascalCasePlural }} = _context.{{ entityNamePascalCasePlural }}.Select(x => x.ToDto()).ToList()
                };
            }
        }
    }
}
